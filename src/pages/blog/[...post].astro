---
import Layout from "@layouts/layout.astro";

import FormattedDate from "@components/formatted-date.astro";

import { type CollectionEntry, getCollection } from "astro:content";

import { render } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { post: post.id },
    props: post,
  }));
}

type Props = CollectionEntry<"blog">;

const post = Astro.props;

const { title, description, pubDate, updatedDate } = post.data;

const { Content } = await render(post);
---

<Layout>
  <article
    class="relative z-2 container mx-auto max-w-3xl space-y-3 px-1.5 font-medium lg:px-3 xl:px-0"
  >
    <div class="mb-12 space-y-1">
      <h1 class="font-medium text-stone-100">{title}</h1>
      <div class="flex justify-between text-xs text-stone-500 uppercase">
        <span>
          <FormattedDate date={pubDate} />
        </span>
        {
          updatedDate && (
            <span>
              Updated: <FormattedDate date={updatedDate} />
            </span>
          )
        }
      </div>
    </div>
    <div class="prose prose-sm md:prose-base">
      <Content />
    </div>
  </article>
</Layout>
